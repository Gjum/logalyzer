#!/bin/bash
# This will later get integrated into the extract-events main loop.

# Configuration
timesfile=times # pre-filtered joins/leaves/restarts
slotsec=3600 # one slot each hour

# Init
online= # holds all players that are online at a time
jointimes=() # holds the last time the player joined
slots=() # holds the names of players online at that timeframe

# Adds the player to all slots he was online at, removes him from online players
leave() {
	jointime="${jointimes["$name"]}"
	if [ -z "$jointime" ]; then
		echo "ERROR \"$name\" left without joining. \"$line\""
	else
		diff="$(( $seconds - $jointime ))"
		online="`echo $online | sed "s/$name *//"`"
		for slot in `seq $(($jointime / $slotsec)) $(($seconds / $slotsec))`; do
			if `echo "${slots["$slot"]}" | grep -qv "$name"`; then
				slots["$slot"]="$name ${slots["$slot"]}"
			fi
		done
	fi
	jointimes["$name"]=
}

# Go through all pre-filtered joins/leaves/restarts
while read line; do
	seconds="`echo $line | cut -b1-10`" # e.g. 1407874849
	action="`echo $line | cut -b12- | grep -o '^[^ ]*'`" # joined/left/restart
	name="`echo $line | cut -b12- | grep -v restart | grep -o '[^ ]*$'`" # player name w/o color escape codes
	case $action in
		joined)
			online="$name $online"
			jointimes["$name"]="$seconds"
			;;
		left) leave
			;;
		restart)
			if [ -n "$online" ]; then
				for name in "$online" # overwrite the empty name field
				do
					leave
				done
				online=
			fi
			;;
		*) echo "ERROR Invalid action \"$action\". \"$line\""
			;;
	esac
done < $timesfile

# print time slot occupations
# TODO breaks at the first time nobody was on for an hour
for slot in "${slots[@]}"; do
	echo "$slot"
done

exit 0

