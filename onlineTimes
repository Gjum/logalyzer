#!/usr/bin/env python3

import timeutils
import logalyzer
import sys

if len(sys.argv) <= 1:
    print('Usage: %s <path/to/logs> [<from-date> [to-date]]' % sys.argv[0])
    print('    date format is "YYYY-MM-DD" or "YYYY-MM-DD HH:MM:SS", get times from...')
    print('    - no dates: total times,')
    print('    - from only: the 24h after that date,')
    print('    - from and to: time between from and to, to is exclusive')
    sys.exit(0)

logs = logalyzer.LogDirectory(sys.argv[1])
from_date = to_date = None
if len(sys.argv) > 2:
    from_date = timeutils.ensure_full_date(sys.argv[2])
    to_date = timeutils.add_to_date_str(from_date, days=1)
if len(sys.argv) > 3:
    to_date = timeutils.ensure_full_date(sys.argv[3])

if from_date:
    print('Online times from',
          timeutils.human_date_str(from_date),
          'to', timeutils.human_date_str(to_date) or 'last activity')
else:
    print('Total online times')

total = {}  # uuid -> seconds
last_name = {}  # uuid -> name
for uuid, sessions in logs.collect_user_sessions(from_date, to_date).items():
    total[uuid] = 0
    for uuid, t_from, t_to, name in sessions:
        total[uuid] += t_to - t_from
        last_name[uuid] = name

human_width = max(map(lambda s: len(timeutils.human_time(s)), total.values())) \
    if len(total) > 0 else 0
for uuid, seconds in sorted(total.items(), key=lambda x: x[1], reverse=True):
    print('%-16s %6is or %*s' % (
        last_name[uuid] + ':', seconds, human_width, timeutils.human_time(seconds))
    )
